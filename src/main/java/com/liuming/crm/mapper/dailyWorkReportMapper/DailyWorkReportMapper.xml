<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liuming.crm.mapper.dailyWorkReportMapper.DailyWorkReportMapper" >
  <resultMap id="Map" type="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReport" >
    <id column="daily_work_report_id" property="dailyWorkReportId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="daily_work_report_created_time" property="dailyWorkReportCreatedTime" jdbcType="TIMESTAMP" />
    <result column="daily_work_report_updated_time" property="dailyWorkReportUpdatedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReport" extends="BaseResultMap" >
    <result column="daily_work_report_content" property="dailyWorkReportContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    daily_work_report_id, user_id, user_name, daily_work_report_created_time, daily_work_report_updated_time
  </sql>
  <sql id="Blob_Column_List" >
    daily_work_report_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReportExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from daily_work_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReportExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from daily_work_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from daily_work_report
    where daily_work_report_id = #{dailyWorkReportId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from daily_work_report
    where daily_work_report_id = #{dailyWorkReportId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReportExample" >
    delete from daily_work_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReport" >
    insert into daily_work_report (daily_work_report_id, user_id, user_name, 
      daily_work_report_created_time, daily_work_report_updated_time, 
      daily_work_report_content)
    values (#{dailyWorkReportId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{dailyWorkReportCreatedTime,jdbcType=TIMESTAMP}, #{dailyWorkReportUpdatedTime,jdbcType=TIMESTAMP}, 
      #{dailyWorkReportContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReport" >
    insert into daily_work_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dailyWorkReportId != null" >
        daily_work_report_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="dailyWorkReportCreatedTime != null" >
        daily_work_report_created_time,
      </if>
      <if test="dailyWorkReportUpdatedTime != null" >
        daily_work_report_updated_time,
      </if>
      <if test="dailyWorkReportContent != null" >
        daily_work_report_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dailyWorkReportId != null" >
        #{dailyWorkReportId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="dailyWorkReportCreatedTime != null" >
        #{dailyWorkReportCreatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dailyWorkReportUpdatedTime != null" >
        #{dailyWorkReportUpdatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dailyWorkReportContent != null" >
        #{dailyWorkReportContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReportExample" resultType="java.lang.Integer" >
    select count(*) from daily_work_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update daily_work_report
    <set >
      <if test="record.dailyWorkReportId != null" >
        daily_work_report_id = #{record.dailyWorkReportId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.dailyWorkReportCreatedTime != null" >
        daily_work_report_created_time = #{record.dailyWorkReportCreatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dailyWorkReportUpdatedTime != null" >
        daily_work_report_updated_time = #{record.dailyWorkReportUpdatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dailyWorkReportContent != null" >
        daily_work_report_content = #{record.dailyWorkReportContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update daily_work_report
    set daily_work_report_id = #{record.dailyWorkReportId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      daily_work_report_created_time = #{record.dailyWorkReportCreatedTime,jdbcType=TIMESTAMP},
      daily_work_report_updated_time = #{record.dailyWorkReportUpdatedTime,jdbcType=TIMESTAMP},
      daily_work_report_content = #{record.dailyWorkReportContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update daily_work_report
    set daily_work_report_id = #{record.dailyWorkReportId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      daily_work_report_created_time = #{record.dailyWorkReportCreatedTime,jdbcType=TIMESTAMP},
      daily_work_report_updated_time = #{record.dailyWorkReportUpdatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReport" >
    update daily_work_report
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="dailyWorkReportCreatedTime != null" >
        daily_work_report_created_time = #{dailyWorkReportCreatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dailyWorkReportUpdatedTime != null" >
        daily_work_report_updated_time = #{dailyWorkReportUpdatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dailyWorkReportContent != null" >
        daily_work_report_content = #{dailyWorkReportContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where daily_work_report_id = #{dailyWorkReportId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReport" >
    update daily_work_report
    set user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      daily_work_report_created_time = #{dailyWorkReportCreatedTime,jdbcType=TIMESTAMP},
      daily_work_report_updated_time = #{dailyWorkReportUpdatedTime,jdbcType=TIMESTAMP},
      daily_work_report_content = #{dailyWorkReportContent,jdbcType=LONGVARCHAR}
    where daily_work_report_id = #{dailyWorkReportId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuming.crm.entity.dailyWorkReportEntity.DailyWorkReport" >
    update daily_work_report
    set user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      daily_work_report_created_time = #{dailyWorkReportCreatedTime,jdbcType=TIMESTAMP},
      daily_work_report_updated_time = #{dailyWorkReportUpdatedTime,jdbcType=TIMESTAMP}
    where daily_work_report_id = #{dailyWorkReportId,jdbcType=VARCHAR}
  </update>
</mapper>